ignoredCodes:=[1002,1008,1021,1022,1023,3104,9015,9022,5024,11030,11031,3018,3019,3100,'lazarus'];
ignoredPaths:=['dev/3rd_party/synapse',
               'dev/3rd_party/epikTimer',
               'lazbuild',
               '--------------------------------',
               'Free Pascal Compiler',
               'Statefile not found',
               'dev/common.*Conversion between ordinals and pointers is not portable',
               'dev/mnh5/core/mnh_litvar.*"bits" does not seem',
               'dev/mnh5/core/mnh_litvar.*"significand" does not seem',
               'dev/mnh5/core/mnh_funcs.*"keyList" of a managed type does not seem',
               'dev/mnh5/gui/mnh_evalThread.*"params" of a managed type does not seem',
               'Local variable "perlinTable" does not seem to be initialized'            ,
               'Variable "newImage" does not seem to be initialized'                     ,
               'Variable "initialStep" of a managed type does not seem to be initialized',
               'Variable "step" of a managed type does not seem to be initialized'       ,
               'Variable "params" of a managed type does not seem to be initialized'];

main->'build.log'.fileLines
.pEach(line,line.matches('\('&ignoredCodes&'\)').agg(OR) ? void : line)
.pEach(line,line.replace(['/media/','D:\'],'').replace('\','/'))
.pEach(line,line.matches(ignoredPaths).agg(OR) ? void : line)
.unique
.each(line,[line.matchComposite('\(....\)').trailing[0],line])
.each(line,line.size!=2 ? void : line)
.sort
.each(line,line[1].replace(line[0],"\t"&line[0]))
.join("\n")
.print;

private existing(f:string)->fileExists(f) ? f : void;

main('files')->
'build.log'.fileLines
.{$L[$L.matches('\(3104\)')]}
.unique
.replace('(3104) Compiling','')
.replace('/media/dev/mnh5','')
.replace('/media/dev/','../')
.replace('D:\dev\mnh5\','')
.replace('D:\dev\','..\')
.replace('\','/')
.trim
.unique
.each(file,existing(file) orElse
           existing('gui/'&file) orElse
           existing('consoles/'&file))
.union(allFiles('','*.inc').minus(['core/code_hash.inc']))
.escape
.join(",\n\v")
.{print("hashFiles:=[\v",$s,'];')};
