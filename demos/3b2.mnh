        RK4(tol>0,F:expression,y0,dt>0          )->RK4(tol,F,y0,dt,         dt*F(y0       ));
private RK4(tol  ,F:expression,y0,dt,F1         )->RK4(tol,F,y0,dt,F1      ,dt*F(y0+0.5*F1));
private RK4(tol  ,F:expression,y0,dt,F1,F2      )->RK4(tol,F,y0,dt,F1,F2   ,dt*F(y0+0.5*F2));
private RK4(tol  ,F:expression,y0,dt,F1,F2,F3   )->RK4(tol,F,y0,dt,F1,F2,F3,dt*F(y0    +F3));
private RK4(tol  ,F:expression,y0,dt,F1,F2,F3,F4)->RK4_E(tol,F,y0,dt,y0+F3,y0+(1/6)*(F1+2*F2+2*F3+F4));
private RK4_E(tol,F,y0,dt,y1_,y1)->RK4_E(tol,F,y0,dt,y1_,y1,each(s,sqr(flatten(y1)-flatten(y1_)),+));
private RK4_E(tol,F,y0,dt,y1_,y1,err<tol)->y1;
private RK4_E(tol,F,y0,dt,y1_,y1,err    )->RK4(tol,F,RK4(tol,F,y0,dt/2),dt/2);

norm(X)->sqr(X%0)+sqr(X%1);
acceleration(P)->acceleration(P,(P%1-P%0)*norm(P%1-P%0)^-1.5,
                                (P%2-P%0)*norm(P%2-P%0)^-1.5,
                                (P%1-P%2)*norm(P%1-P%2)^-1.5);
acceleration(P,F10,F20,F12)->[F10+F20,-F10-F12,F12-F20];
D(Sys)->[Sys%1,acceleration(Sys%0)];

pi:=4*arctan(1);
sc(t)->[sin(2*pi*t),cos(2*pi*t)];

initialSys->[[sc(0)   ,sc(     1/3),sc(     2/3)],
        0.76*[sc(0.25),sc(0.25+1/3),sc(0.25+2/3)]];
//initialSys->[[sc(0)   ,sc(0.5 ),[0,0]],
//        1.12*[sc(0.25),sc(0.75),[0,0]]];


evolve (      S0,dt,t>0 )->[S0%0]|evolve(RK4(0.001,{D($P)},S0,dt),dt,t-dt);
evolve (      S0,dt,t   )->[S0%0];

last(L)->L%[size(L)-1];
last(n,L)->tail(L,size(L)-n);
plotSys(E)->setPlotAutoscale([true,true]) and
            setPlotPreserveAspect(true) and
            setPlotAxisStyle([3,3]) and
            plot   (last(250,E%%0),"red"  ) and addPlot(last(500,E%%0),"0.5 red  ") and addPlot(E%%0,"0.25 red  ") and addPlot(last(E%%0),". red"  ) and
            addPlot(last(250,E%%1),"green") and addPlot(last(500,E%%1),"0.5 green") and addPlot(E%%1,"0.25 green") and addPlot(last(E%%1),". green") and
            addPlot(last(250,E%%2),"blue")  and addPlot(last(500,E%%2),"0.5 blue" ) and addPlot(E%%2,"0.25 blue" ) and addPlot(last(E%%2),". blue");

pngName(s:string)->replace(myPath&"#",".mnh#","_"&copy(s,length(s)-4,4)&".png");
pngName(i:int)->pngName("000"&i);


plotSeries(E,i,chunkSize)->size(E)>(i-1)*chunkSize ?
  plotSys(head(E,i*chunkSize)) and
  print('Writing file ',pngName(i)) and
  renderToFile(pngName(i),768,768,2) and
  plotSeries(E,i+1,chunkSize)
  :true;


main->plotSeries(evolve(initialSys,0.9e-2,120),1,10);


