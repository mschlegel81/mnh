USE GUI,rk4;

private circlePoint(phi)->[cos(phi/180*4*arctan(1)),
                           sin(phi/180*4*arctan(1))];

private initialState:=
  [circlePoint(  0),circlePoint( 90)  ,
   circlePoint(120),[0,0],
   circlePoint(240),-3*circlePoint(90)];


private force(delta:numericList(2))->delta*sqr(delta).agg(+)^(3/2);

private F:={[$x[1],
             force($x[2]-$x[0])+force($x[4]-$x[0]),
             $x[3],
             force($x[0]-$x[2])*3+force($x[4]-$x[2]),
             $x[5],
             force($x[0]-$x[4])*3+force($x[2]-$x[4])]};

private mutable trace0:=[];
private mutable trace1:=[];
private mutable trace2:=[];
private synchronized plotState(F)->begin
  local p0:=F[0]; trace0:=trailing(trace0|[p0],50);
  local p1:=F[2]; trace1:=trailing(trace1|[p1],50);
  local p2:=F[4]; trace2:=trailing(trace2|[p2],50);
  plot(trace0,'red l');
  addPlot([p0],'red .');
  addPlot(trace1,'green l');
  addPlot([p1],'green .');
  addPlot(trace2,'blue l');
  addPlot([p2],'blue .');
  plot.display;
  sleep(0.01);
end;

private timeStepSize:=1E-2;

//@demo_for=plotting, animation
main->begin
  plot.setOptions([['x0',-2],['y0',-2],['x1',2],['y1',2],['axisStyleX',3],['axisStyleY',3]]);
  local state:=initialState;
  state.plotState;
  while(not(plotClosed),plotState(state:=state.RK4(F,timeStepSize,1E-2)));
end;
