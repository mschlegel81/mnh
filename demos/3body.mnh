USE GUI,rungeKutta;

private circlePoint(phi)->[cos(phi/180*4*arctan(1)),
                           sin(phi/180*4*arctan(1))];

private initialState:=
  [circlePoint(  0),0.76*circlePoint( 90)  ,
   circlePoint(120),0.76*circlePoint(120+90) ,
   circlePoint(240),0.76*circlePoint(240+90)];


private force(delta:NumericList(2))->delta*sqr(delta).agg(+)^(-3/2);

private F:={begin
             [$x[1],
              (local f20:=force($x[2]-$x[0]))+(local f40:=force($x[4]-$x[0])),
              $x[3],
              -f20+(local f42:=force($x[4]-$x[2])),
              $x[5],
              -f40-f42];
            end};

@SuppressUnusedWarning
private asymmetryOf(x:List(6))->begin
  local A:=[sqr(x[0]-x[2]).agg(+),
            sqr(x[4]-x[2]).agg(+),
            sqr(x[0]-x[4]).agg(+)];
  max(A)-min(A);
end;

private newTrailPlotter(style)->{begin
  local trace:=[];
save;
  trace:=trailing(trace|[$x],300);
  addPlot([$x],style&' .');
  addPlot(trace,style&' l');
end};

private timeStepSize:=2E-2;
private aimFPS:=50;

@demo_for=plotting, animation
main->begin
  plot.setOptions([['axisStyleX',3],['axisStyleY',3],['autoscaleX',true],['autoscaleY',true]]);
  local state:=initialState;
  local plotter:=[newTrailPlotter('red'),
                  newTrailPlotter('green'),
                  newTrailPlotter('blue')];

  local stepForward:=integrator(CASH_KARP,F,timeStepSize,1E-6);
  local nextFrameAt:=time;
  local stepCounter:=-1;
  while(!plotClosed,begin
    plot();
    state[[0,2,4]].each(position,plotter[index](position));
    plot.drawTextAbsolute(0.05,1,format('t=%6.2f',(stepCounter+=1)*timeStepSize),'TL');
    sleepUntil(nextFrameAt+=1/aimFPS);
    postDisplay;
    state:=state.stepForward;
  end);
end;
