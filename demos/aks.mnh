memoized
private pascal(n<1)->1;
private pascal(n)->pascal(n-1)|0+0|pascal(n-1);
private AKSPoly(n)->pascal(n)*(-1^[0..n]);
private powerOfX(0)->"1";
private powerOfX(1)->"x";
private powerOfX(n)->"x^"&n;
private AKSPolyToString(coeff)->each(i,[0..size(coeff)-1],&,
  (coeff%i>0 and i>0 ? "+" : "")&
  (coeff%i = 1 ? "" : coeff%i = -1 ? "-" : coeff%i)&
  powerOfX(size(coeff)-i-1));

private AKS_isPrime(n)->trueCount(AKSPoly(n)%[1..n-1] mod n<>0)=0;

//*See <a href="http://rosettacode.org/wiki/AKS_test_for_primes">http://rosettacode.org/wiki/AKS_test_for_primes</a>
main->print('Polynomial expansions:') |
      each(i,[0..7],printf("(x-1)^%I% = %X%",i,AKSPolyToString(AKSPoly(i))))|
      print('\nPrimes <= 66 are : ',each(i,[2..66],AKS_isPrime(i) ? i : void));
