USE pascal;
memoized private AKSPoly(n)->pascalTriangleRow(n)*(-1^[0..n]);
private powerOfX(0)->"1";
private powerOfX(1)->"x";
private powerOfX(n)->"x^"&n;
//@SuppressUnusedWarning=Used in formatted print
private AKSPolyToString(coeff:IntList)->[0..size(coeff)-1].each(i,
  coeff[i]>0 and i>0 ? "+" : "",
  coeff[i] = 1 ? "" : coeff[i] = -1 ? "-" : coeff[i],
  powerOfX(size(coeff)-i-1)).join;

private AKS_isPrime(n)->trueCount(AKSPoly(n)[[1..n-1]] mod n<>0)=0;

//*See http://rosettacode.org/wiki/AKS_test_for_primes
main->print('Polynomial expansions:') |
      printf("(x-1)^%{$0}d = %{AKSPolyToString(AKSPoly($0))}s",[0..7])|
      print("\nPrimes <= 66 are : ",[2..66].each(i,AKS_isPrime(i) ? i : void));
