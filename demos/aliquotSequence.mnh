memoized private dividerSum(n:int)->
  n<=1 ? 0 : begin
    local C:=[2..floor(sqrt(n))];
    C:=C%(n mod C = 0);
    each(d,unique(1|C|(n div C)),+);
  end;

private classify(n:int)->
  begin
    local seq:=[n];
    local k:=dividerSum(n);
    while(size(seq)<=16 and not(k in seq),begin
      seq|=k;
      k:=dividerSum(k);
    end);
    [k=head(seq)
     ? (size(seq)=1 ? "perfect" :
        size(seq)=2 ? "amicable" :
        "social")
     : (k=trailing(seq)
        ? (k=0 ? "terminating" : "aspiring")
        : (k in seq ? "cyclic" : "non-terminating"))
    ,seq];
  end;

//*See http://rosettacode.org/wiki/Aliquot_sequence_classifications
main->begin
  local input:=[11, 12, 28, 496, 220, 1184, 12496, 1264460, 790, 909, 562, 1064, 1488];
  local class:=each(n,input,classify(n));
    printf("%I%\t|\t%X%\t|\t%X%",
     "start @"| input,
     "classification"|( class%%0),
     "sequence"|(class%%1));
end;
