USE formattingUtils;

private dividerSum(n:Int)->n<=1 ? 0 : factorize(n).subSets.each(s,s.agg(*) orElse 1,+)-n;

private classify(n:Int)->
  begin
    local seq:=[n];
    local k:=dividerSum(n);
    while(size(seq)<=16 and not(k in seq),begin
      seq|=k;
      k:=dividerSum(k);
    end);
    [n,
     k=head(seq)
     ? (size(seq)=1 ? "perfect" :
        size(seq)=2 ? "amicable" :
        "social")
     : (k=trailing(seq)
        ? (k=0 ? "terminating" : "aspiring")
        : (k in seq ? "cyclic" : "non-terminating"))
    ,seq];
  end;

//*See http://rosettacode.org/wiki/Aliquot_sequence_classifications
main->main(11, 12, 28, 496, 220, 1184, 12496, 1264460, 790, 909, 562, 1064, 1488);

//*Return Aliquot sequence classifications for the given numbers
main(...)->
  (...).pMap(::toInt)
       .pMap(::classify)
       .formatTable(['start @','classification','sequence']).join("\n").print;
