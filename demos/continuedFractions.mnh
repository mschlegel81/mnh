private cfString(A:Expression(1),B:Expression(1),depth>0)->begin
  local e:='...';
  [depth..1].each(n,begin e:=B(n)&'/('&A(n)&'+'&e&')'; void; end);
  A(0)&'+'&e;
end;
private zero:={$0*0};
private cfString(A:Numeric,B,depth>0)->cfString(zero+A,B,depth);
private cfString(A,B:Numeric,depth>0)->cfString(A,zero+B,depth);
private cfValue(A,B,depth>0)->cfString(A,B,depth).replace('...','0').interpret;

//@demo_for=math
//*See http://rosettacode.org/wiki/Continued_fraction
main->[[          1,            1],
       [{$n=0?1:2 },            1],
       [{$n=0?2:$n},{$n=1?1:$n-1}],
       [{$n=0?3:6 },{(2*$n-1)^2} ]]
      .pMap({cfString($p[0],$p[1],5)&"\t=\t"&
              cfValue($p[0],$p[1],1000)})
      .join("\n")
      .print;
