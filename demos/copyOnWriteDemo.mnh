addElement(L:List,newElement)->begin
  newList:=L;
  newList|=newElement;
  print('after adding element ',newElement,' the list is: ',newList);
  newList;
end;

removeElement(L:List,indexToDrop:Int)->begin
  newList:=L;
  newList[indexToDrop]:=void;
  print('after removing element #',indexToDrop,' the list is: ',newList);
  newList;
end;

main->begin
  list:=[0..3];
  printf('initial list: {list}');
  list.addElement('X');
  list.removeElement(0);
  printf('list still is: {list}');
  list:=list.addElement('X');
  list:=list.removeElement(0);
  printf('Now my list is: {list}');

  A:=[1,2,3];
  B:=A;
  printf('(1) A==B = {A==B} //A={A} and B={B} point to the same value object');
  B[1]:=4;
  printf('(2) A==B = {A==B} //B={B} points to another value object after copy-on-write');
  B[1]:=2;
  printf('(3) A==B = {A==B} //B={B} still points to another value which is equal to A');
end;
