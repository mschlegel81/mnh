//*Constructs a De Bruijn sequence for an alphabet of base entries
//*containing all substrings of length n
//*See: https://en.wikipedia.org/wiki/De_Bruijn_sequence
deBruijn(base:Int,n:Int)->begin
  local a:=[1..base*n]*0;
  local sequence:=[];
  local constructSequence:=((t,p)->begin
    t>n
    ? n mod p=0
      ? sequence|=a[[1..p]]
      : void
    : begin
        a[t]:=a[t-p];
        constructSequence(t+1,p);
        base>a[t-p]+1 ?
        [a[t-p]+1..base-1].each(j,
          a[t]:=j,
          constructSequence(t+1,t)) : void;
      end; end);
  constructSequence(1,1);
  sequence;
end;

main->[1..7].each(i,print(deBruijn(2,i).join));
