@demo_for=list processing
count89(x0>200)->begin
  local result:=0;
  local DSS:=[1..x0].map((x)->x=>x.digits.sqr.agg(+)).toMap;
  local x:=DSS.getInner(1).elementFrequency;
  while(x.size>0,begin
    //Work with a map of frequencies: [value,count]
    result+=x[89] orElse 0;
    x[89]:=void;
    x[ 1]:=void;
    local t:=x.transpose;
    x:=t[1].group(t[0].map((k)->(DSS[k] orElse DSS[k]:=k.digits.sqr.agg(+)) ),::+);
  end);
  result;
end;

//*See http://rosettacode.org/wiki/Iterated_digits_squaring
main->count89(100000).print;
