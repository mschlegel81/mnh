@demo_for=list processing
count89(x0:IntList)->begin
  local result:=0;
  local x:=x0.digits.sqr        //vectorized: digits.sqr
             .pMap({$L.agg(+)}) //parallelized aggregation per sub-list
             .elementFrequency; //group to reduce working set size
  while(x.size>0,begin
    result+=x[89] orElse 0;
    x[89]:=void;
    x[ 1]:=void;
    x:=x.pMap({[$x[0].digits.sqr.agg(+),$x[1]]})
        .group(0)
        .pMap({$g[0] => $g[1].getInner(1).agg(+)})
        .toMap;
  end);
  result;
end;

//*See http://rosettacode.org/wiki/Iterated_digits_squaring
main->count89([1..100000]).print;
