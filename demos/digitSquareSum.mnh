private digitSquareSum(x:int)->digitSquareSum(string(x));
private LUT:=each(i,[0..9],[string(i),i*i]);

private digitSquareSum(s:string)->each(x,LUT%copy(s,[0..length(s)-1],1),+);

memoized
private digitSquareFinal(1)->1;
private digitSquareFinal(89)->89;
private digitSquareFinal(x)->digitSquareFinal(digitSquareSum(x));

memoized
private digitSquareSteps(1)->0;
private digitSquareSteps(89)->0;
private digitSquareSteps(x)->1+digitSquareSteps(digitSquareSum(x));


private count89->each(i,[1..100000],+,digitSquareFinal(i)=89 ? 1 : void);
//*See <a href="http://rosettacode.org/wiki/Iterated_digits_squaring">Iterated_digits_squaring</a>
main->print(count89);
