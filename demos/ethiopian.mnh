private halve(i:Int)->i div 2;
private double(i:Int)->i*2;
private isEven(i:Int)->(i and 1) = 0;

ethiopianMultiplication(a_>=1,b_>=1)->ethiopianMultiplication(a_,b_,false);
ethiopianMultiplication(a_>=1,b_>=1,doPrint:Boolean)->begin
  local a:=a_;
  local b:=b_;
  local aColumn:=[a];
  local bColumn:=[b];
  while(a>1,begin
    aColumn|=(a:=halve(a));
    bColumn|=(b:=double(b));
  end);
  local strikeOut:=aColumn.each(v,isEven(v));
  local result:=bColumn[!strikeOut].agg(+);

  doPrint ? begin
    //Pretty printing:
    printf("%{$0}5d  {$2?'[':' '}%{$1}5d{$2?']':''}",aColumn,bColumn,strikeOut);
    print("       =======");
    printf("        %5d",result);
  end : void;
  result;
end;

@demo_for=math, formatting
//*See http://rosettacode.org/wiki/Ethiopian_multiplication
main->ethiopianMultiplication(17,34,true);
