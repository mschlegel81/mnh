private rotFak:=2.3999632297286533221470;
private scanRad:=3;
private fibPoint(i:int)->sqrt(i)*[cos(rotFak*i),sin(rotFak*i)];
private fibPoint(I:intList)->each(i,I,fibPoint(i));
private dist(X,y:numericList)->sqr(X%%0-y%0)+sqr(X%%1-y%1);

private closeIndex(last,L)->closeIndex(last,L,[0..size(L)-1]%(isInRange(L%%0,last%0-scanRad,last%0+scanRad) and
                                                              isInRange(L%%1,last%1-scanRad,last%1+scanRad)));
private closeIndex(last,L,[] )->-1;
private closeIndex(last,L,I  )->closeIndex(last,L,I,dist(L%I,last));
private closeIndex(last,L,I,D)->min(D)<sqr(scanRad) ? I%argMin(D) : -1;

private condPlot(L)->size(L)>3 ? addPlot(L,"black") : true;
private findPath(last,L<>[],     result)->findPath(last,L,closeIndex(last,L),result);
private findPath(last,L    ,     result)->condPlot(result);
private findPath(last,L<>[],i>=0,result)->findPath(L%i,L%([0..size(L)-1]<>i),result|[L%i]);
private findPath(last,L    ,i   ,result)->condPlot(result) and findPath(L%(size(L)-1),L,[]);

private doPlot->plot.setAxisStyle([0,0]) and
                plot([]) and
                findPath(fibPoint(5000),fibPoint([0..5000]),[]);

private main_impl(filename:string,xRes:int,yRes:int)->doPlot and renderToFile(filename,xRes,yRes,10) and print('File ',filename,' was generated.');
//*Plots a fibonacci maze to file <code>filename</code> using a custom resolution (given as <i>xRes</i><code>x</code><i>yRes</i>)
main(filename,resolution)->main_impl(filename,softCast(split(resolution,"x")%0),softCast(split(resolution,"x")%1));
//*Plots a fibonacci maze to file <code>filename</code> using a custom resolution
main(filename,xRes,yRes )->main_impl(filename,softCast(xRes)                   ,softCast(yRes));
//*Plots a fibonacci maze to file <code>filename</code> using a resolution of 768x768
main(filename           )->main_impl(filename                        ,768,768);
//*Plots a fibonacci maze using the package path and a resolution of 768x768
main                     ->main_impl(replace(myPath&"#","mnh#","png"),768,768);
