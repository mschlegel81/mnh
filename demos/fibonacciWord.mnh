USE shannonEntropy;
@demo_for=memoization
memoized
private fibWord(i<=1)->"1";
private fibWord(i<=2)->"0";
private fibWord(n)->fibWord(n-1)&fibWord(n-2);

memoized
private fibWordCharFreq(i<=1)->[0,1];
private fibWordCharFreq(i<=2)->[1,0];
private fibWordCharFreq(n)->fibWordCharFreq(n-1)+fibWordCharFreq(n-2);

private fibWordLength(i)->fibWordCharFreq(i).agg(+);
private fibWordEntropy(i)->-1*(fibWordCharFreq(i)/fibWordLength(i)).each(s,s*ln(s)/ln(2),+);

//*Solves the task: http://rosettacode.org/wiki/Fibonacci_word (with cheating)
main->print("N\tLength\tEntropy\tWord\n") |
      [ 1.. 9].each(i,printf('%2d %9d %15.13f %s',i,length(fibWord(i)),shannonEntropy(fibWord(i)),fibWord(i))) |
      [10..37].each(i,printf('%2d %9d %15.13f',i,fibWordLength(i),fibWordEntropy(i)));
