@demo_for=stateful expressions
//*Generates a series of powers
powerGen(power:Int)->rangeGenerator(1,2^63-1)^power;

//*Generates a series of values which are square numbers but not cubic numbers
squareButNotCubic->{begin
  local cubes  :=powerGen(3);
  local squares:=powerGen(2);
  local nextCube:=cubes();
  local nextSquare:=squares();
save;
  nextSquare:=squares();
  while(nextCube==nextSquare,begin
    nextCube:=cubes();
    nextSquare:=squares();
  end);
  while(nextSquare>nextCube,nextCube:=cubes());
  nextSquare;
end}.toGenerator;

//*Extracts elements with given indexes from a generator
extract(generator:IteratableExpression, indexes:IntList)->generator.head(indexes.max+1)[indexes];

//*Solves the "Generator/Exponential" task from rosettacode.org (http://rosettacode.org/wiki/Generator/Exponential)
main->squareButNotCubic.extract([20..29]).print;
