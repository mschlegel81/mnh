private worldHeight:=40;
private worldWidth:=40;

private
initWorld->intRandom(2,worldHeight*worldWidth);
private
printWorld(w:intList)->printf("%s","\f"|copy(join([' ','#'].get(w)),worldWidth*[0..worldHeight-1],worldWidth));

private xyPos:=[0.. worldHeight-1].each(i,
               [0.. worldWidth -1].each(j,[j,i]),|);

private
plotWorld(w:intList)->begin
  setAxisStyle([0,0]);
  plot([[0,0],[worldWidth+1,worldHeight+1]],'box RGB1,1,1');
  addPlot([0..size(w)-1].each(i,
                  w.get(i)=0 ? void : [xyPos.get(i),(xyPos.get(i))+1],|),'black box');
  display;
  sleep(0.05);
end;

private memoized
shift(di,dj)->flatten([0..worldHeight-1].each(i,
                      [0..worldWidth-1].each(j,((i+di+worldHeight) mod worldHeight)*worldWidth+
                                                (j+dj+worldWidth)  mod worldWidth )));
private memoized
neighbors(w)->w.get(shift(-1,-1))+w.get(shift( 0,-1))+w.get(shift( 1,-1))+
              w.get(shift(-1, 0))+                    w.get(shift( 1, 0))+
              w.get(shift(-1, 1))+w.get(shift( 0, 1))+w.get(shift( 1, 1));

private
TRANSITION:=[[0,0,0,1,0,0,0,0,0],
             [0,0,1,1,0,0,0,0,0]];

step(w)->step(w,TRANSITION.getInner(neighbors(w)));
step(w,t)->[0..size(w)-1].each(i,t.getInner(i).get(w.get(i)));

playUntilStatic(w,sleepTime)->begin
  local world:=w;
  local wantQuit:=false;
  pEach(task,[
 {while(not(wantQuit),begin
    printWorld(world);
    sleep(sleepTime);
    local newWorld:=step(world);
    world==newWorld ? wantQuit:=true : void;
    world:=newWorld;
    void;
  end)},
 {begin
    ask('Press Enter to quit.');
    wantQuit:=true;
  end}],task());
end;


playGui->begin
  local living:=true;
  local world:=initWorld;
  [{begin ask('Press enter'); living:=false; end},
   {while(living,plotWorld(world:=step(world)))}]
  .pEach(task,task());
end;


playSteps(w,n>0)->begin
  local world:=w;
  [1..n].each(i,begin
    printWorld(world);
    world:=step(world);
    void;
  end);
end;

main->playSteps(initWorld,10);
main("-long")->playUntilStatic(initWorld,0.05);
main(steps)->playSteps(initWorld,softCast(steps));

playGui;
