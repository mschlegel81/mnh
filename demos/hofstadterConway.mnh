hofstaderConwayGen->{begin
  local HC:=[1,1,1];
  local i:=0;
  local p:=1;
save;
  (i+=1)>=3 ? HC|=(p:=HC[p]+HC[i-p]) : void;
  HC[i];
end}.toGenerator;

private maxBetween(i0,i1,L)->begin
  local subList:=L.tail(i0).head(i1-i0);
  local maxIdx:=argMax(subList);
  format('%17.14f @i=%7d',subList[maxIdx],i0+maxIdx);
end;

private analyze(powerOfTwo:Int)->begin
  local ratios:=1|hofstaderConwayGen.head(2^powerOfTwo)/[1..2^powerOfTwo];
  [0..powerOfTwo-1].each(i,printf("range 2^%2d..2^%2d max. a(n)/n=%s",i,i+1,maxBetween(2^i,2^(i+1),ratios)));
  print("Mallows Number: ",indexOf(ratios>0.55).max);
end;

//*This solves the task: http://rosettacode.org/wiki/Hofstadter-Conway_$10,000_sequence
main('rosetta')->analyze(20);

@demo_for=math, generator
//*As above but abridged for regression test
main->analyze(17);
