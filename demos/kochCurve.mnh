@demo for=local variables
runningSum([])->[];
runningSum(L)->begin
  local sum:=L.head;
  sum|L.tail.each(i,sum+=i);
end;

kochCurve(depth)->kochCurve(depth,1,0);
@demo_for=fractal, plotting
private kochCurve(depth>=0,LX,LY)->kochCurve(depth-1,
  (LX*0.333)|(LX*0.167-LY*0.288)|(LX*0.167+LY*0.288)|(LX*0.333),
  (LY*0.333)|(LY*0.167+LX*0.288)|(LY*0.167-LX*0.288)|(LY*0.333));
private kochCurve(depth,LX,LY)->transpose([runningSum(LX),runningSum(LY)]);

private main_impl(filename:String,xRes:Int,yRes:Int)->
  plot.setOptions([['preserveAspect',true],['autoscaleX',true],['autoscaleY',true],['logscaleX',false],['logscaleY',false],['axisStyleX',0],['axisStyleY',0]]) and
  plot.plot(kochCurve(7),"0.5") and
  plot.renderToFile(filename,xRes,yRes);

//*Plots a Koch Curve to file <code>filename</code> using a custom resolution (given as <i>xRes</i><code>x</code><i>yRes</i>)
main(filename,resolution)->main_impl(filename,softCast(split(resolution,"x").get(0)),softCast(split(resolution,"x").get(1)));
//*Plots a Koch Curve to file <code>filename</code> using a custom resolution
main(filename,xRes,yRes )->main_impl(filename,softCast(xRes)                   ,softCast(yRes));
//*Plots a Koch Curve to file <code>filename</code> using a resolution of 1366x768
main(filename           )->main_impl(filename                        ,1366,768);
//*Plots a Koch Curve using the package path and a resolution of 1366x768
main                     ->main_impl(replace(myPath&"#","mnh#","png"),1366,768);
