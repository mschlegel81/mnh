LevenshteinDistance(A:string,B:string)->
  diffStats(A,B)   //caculate the diff
  .drop('matches') //drop the matches
  .getInner(1)     //get the values to be summed up
  .agg(+);         //aggregate via +


//*Prints out the Levenshtein distance of strings A and B
main(A,B)->LevenshteinDistance(A,B).print;
//*This solves the Levenshtein distance task: http://rosettacode.org/wiki/Levenshtein_distance
main->main('kitten','sitting');
