USE turtleGfx;
@demo_for=strings, recursion, fractals
@Algorithm Name=Lindenmayer system
lindenmayer(config,depth)->lindenmayer@(config|depth);
private lindenmayer(data,productionLHS,productionRHS,depth>0)->
        lindenmayer(replace(upper(data),upper(productionLHS),lower(productionRHS)),
                    productionLHS,
                    productionRHS,
                    depth-1);
private lindenmayer(data,productionLHS,productionRHS,depth)->upper(data);
lindenmayerTurtle(config,depth)->turtle@(config.get(1)|lindenmayer(config.get(0),depth));

@SuppressUnusedWarning
HILBERT       :=[['A'      ,['A','B'],['-BF+AFA+FB-','+AF-BFB-FA+']],[ 0, 90,'F' ]];
@SuppressUnusedWarning
KOCH_SNOWFLAKE:=[['F++F++F',['F'    ],['F-F++F-F'                 ]],[ 0, 60,'F' ]];
@SuppressUnusedWarning
SIERPINSKI    :=[['A'      ,['A','B'],['B-A-B'      ,'A+B+A'      ]],[ 0, 60,'AB']];
@SuppressUnusedWarning
SIERPINSKI2   :=[['F-G-G'  ,['F','G'],['F-G+F+G-F'  ,'GG'         ]],[ 0,120,'FG']];
@SuppressUnusedWarning
PLANT         :=[['X'      ,['X','F'],['F-[[X]+X]+F[+FX]-X','FF'  ]],[70, 25,'F' ]];

//*For regTest
main->print(round(lindenmayerTurtle(HILBERT,3),2));
