memoized
ludics_gen(1)->[1];
ludics_gen(2)->[1,2];
ludics_gen(n>2)->begin
  print('Generating @',n);
  local L:=ludics_gen(n-1);
  local X:=[2..max(L)*4];
  L.tail.each(ludic,X:=X[[0..size(X)-1] mod ludic<>0]);
  L|X;
end;

ludics_by_size(resultSize)->begin
  local genIndex:=1;
  local result:=ludics_gen(genIndex);
  while(result.size<resultSize,result:=ludics_gen(genIndex+=1));
  head(result,resultSize);
end;

ludics_by_max(maxValue)->begin
  local genIndex:=1;
  local result:=ludics_gen(genIndex);
  while(result.max<maxValue,result:=ludics_gen(genIndex+=1));
  result[result<=maxValue];
end;

//*See <a href="http://rosettacode.org/wiki/Ludic_numbers">http://rosettacode.org/wiki/Ludic_numbers</a>
main->begin
  local LUDICS:=ludics_by_size(2005);
  local triplets:=[0..250].intersect(LUDICS,LUDICS-2,LUDICS-6);
  print("Ludic Numbers",
      "\n  The first 25 are: ",LUDICS.head(25),'.',
      "\n  There are ",LUDICS[LUDICS<=1000].size,' lesser or equal to 1000.',
      "\n  The 2000..2005th are ",LUDICS.get([2000..2005]-1),'.',
      "\n  The triplets below 250 are ",format('(%{$0}s,%{$0+2}s,%{$0+6}s)',triplets).join(','));
end;
