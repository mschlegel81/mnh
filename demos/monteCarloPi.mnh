@SuppressUnusedWarning=Used in printf
private monteCarloPi  (sampleSize>0)->
  trueCount(random(sampleSize)²+random(sampleSize)²<1)/sampleSize*4;

@SuppressUnusedWarning=Used in printf
private vanDerCorputPi(sampleSize>0)->
  trueCount(vanDerCorputGenerator(2).head(sampleSize)²+
            vanDerCorputGenerator(3).head(sampleSize)²<1)/sampleSize*4;

@demo_for=math/monte carlo
//*Solves the "Monte carlo methods" task from http://rosettacode.org/wiki/Monte_Carlo_methods
main->begin
  print('See http://rosettacode.org/wiki/Monte_Carlo_methods') and
  sampleSizes:=10^[1..6];
  vanDerCorput:=future({sampleSizes.pMap(::vanDerCorputPi)});
  monteCarlo  :=sampleSizes.map(::monteCarloPi);

  printf("n=%7d pi approximated as %-9.7g (random) and as %-9.7g (Van der Corput generator)",
          sampleSizes,
          monteCarlo,
          vanDerCorput());
end;
