USE '..\packages\rungeKutta.mnh';
private df(x)  ->[1,x[0]*sqrt(x[1])];
private initial:=[0,1];
private exact(t)->1/16*(t²+4)²;

@demo_for=expressions, numerics/time integration
//*Solves the Runge-Kutta task from http://rosettacode.org/wiki/Runge-Kutta_method
main->begin
  local CashCarpSolution:=future(::iterate,[initial,integrator(CASH_KARP,::df,0.1,1E-9),100]);
  local RK4solution     :=         iterate (initial,integrator(RK4      ,::df,0.1     ),100);
  local pointsInTime    :=RK4solution.getInner(0);
  local exactSolutions  :=exact(pointsInTime);
  local RK4Error        :=abs(RK4solution     .getInner(1)-exactSolutions);
  CashCarpSolution:=CashCarpSolution(); //resolve future
  local CashCarpError   :=abs(CashCarpSolution.getInner(1)-exactSolutions);

  print('     | RK4                   | Cash-Carp, tol. 1E-9',
      "\ntime | approx.    error*1E3  | approx.    error*1E3");
  printf("%4.1f | %10.6f %10.6f | %10.6f %10.6f",
         pointsInTime,
         RK4solution.getInner(1),
         RK4Error*1E3,
         CashCarpSolution.getInner(1),
         CashCarpError*1E3);
end;
