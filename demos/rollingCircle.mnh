//*Displays a rolling circle animation
plain script;
USE GUI;

triangle(t)->(t+2*pi/3*[0..3]).each(phi,[t-sin(phi),1-cos(phi)]);

triangleFootpoint(x,t)->begin
  x0:=t-sin(4*pi/3+t);
  x1:=t-sin(t);
  y0:=1-cos(4*pi/3+t);
  y1:=1-cos(t);
  y0+(y1-y0)/(x1-x0)*(x-x0);
end;

triangleFoot:=begin
  X:=([0..49]/50*2*pi/3);
  Y:=X.each(x,triangleFootpoint(x,([-80..80]/400+x)).min);
  Y:=Y|Y|Y|Y|Y|Y|Y;
  X:=(X-6*pi/3)|(X-4*pi/3)|(X-2*pi/3)|X|(X+2*pi/3)|(X+4*pi/3)|(X+6*pi/3);
  [X,Y].transpose;
end;

@demo_for=plotting, animation
private rollAt(t:Numeric,doPlot:Boolean)->begin
  circleX:=sin([0..100]/100*2*pi);
  circleY:=cos([0..100]/100*2*pi);
save;
  center:=[t,1];
  line:=[center,center+[-sin(t),-cos(t)]];
  doPlot
  ? begin
      plot(line,'. l');
      addPlot(t+circleX,1+circleY,'black');
      triangle(t).addPlot('blue');
      addPlot(triangleFoot,'blue');
    end
  : void;
  [line[1]];
end;

begin
  curve:=([-200..-1]/200*2*pi).map({rollAt($t,false).head});
  clearAnimation;
  [['autoscaleX',false],['autoscaleY',false],
   ['logscaleX',false],['logscaleY',false],
   ['axisStyleX',0],
   ['preserveAspect',true],['axisStyleY',2],
   ['y0',0],['y1',2.0]].toMap.setOptions;
  ([0..199]/200*2*pi).each(t,begin
    [['x0',t-2*pi],['x1',t+1.0]].setOptions;
    curve|=rollAt(t,true);
    addPlot(curve,'red 0.5 . l');
    addAnimationFrame;
    postDisplay;
  end);
  display;
end;
