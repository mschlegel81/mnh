regulaFalsi(F:expression,x0input:numeric,x1input>x0input,steps>0)->begin
  local x0:=x0input;
  local f0:=F(x0);
  local x1:=x1input;
  local f1:=F(x1);
  each(step,[1..steps],
    f0=0 or f1=0 ? void :
    begin
      local xm:=x1-f1*(x0-x1)/(f0-f1);
      local fm:=F(xm);
      sign(f0)=sign(fm)
      ? begin f0:=fm; x0:=xm; end
      : begin f1:=fm; x1:=xm; end;
      void;
    end
  );
  round(abs(f1)<abs(f0) ? x1 : x0, 12);
end;

roots(F:expression,x0:numeric,x1:numeric)->begin
  local X:=x0|sort(x0+random(1000)*(x1-x0))|x1;
  local S:=each(x,X,sign(F(x)));
  each(i,[0..size(S)-2],S%i<>S%(i+1) ? regulaFalsi(F,X%i,X%(i+1),100) : void);
end;

private epsilon:=1E-12;

main(F:expression)->print("Analyzing ",F) and
                    each(r,roots(F,-6,6),print("Root found ",abs(F(r))<epsilon?"at   ":"near ",r));
main(F:string)->main(expression(F));
//*Solves the "Roots of a function" task from <a href="http://rosettacode.org/wiki/Roots_of_a_function">RosettaCode</a>
main->print('See http://rosettacode.org/wiki/Roots_of_a_function') and
      main({$x^3-3*$x^2+2*$x});
