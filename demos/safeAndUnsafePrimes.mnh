memoized primesBelow(threshold)->primes(threshold).toSet;

memoized safePrimesBelow(threshold)->begin
  P:=primesBelow(threshold);
  intersect(P,(P-1) div 2).size;
end;

unsafePrimesBelow(threshold)->begin
  P:=primesBelow(threshold);
  P.size-safePrimesBelow(threshold);
end;

safePrimeGenerator  ->primeGenerator.pFilter((n)-> isPrime((n-1) div 2));
unsafePrimeGenerator->primeGenerator.pFilter((n)->!isPrime((n-1) div 2));

main->begin
  print("The first 35 safe primes are: \n  ",safePrimeGenerator.head(35).join(" "),
      "\nThe first 40 unsafe primes are: \n  ",unsafePrimeGenerator.head(35).join(" "));
  printf("There are\t{safePrimesBelow($0)}\tsafe primes below\t{$0}",[1000000,10000000]);
  printf("There are\t{unsafePrimesBelow($0)}\tunsafe primes below\t{$0}",[1000000,10000000]);
end;
