private memoized //use memoization because this will be called again...
step(s:string)->
  s.chars            //split the string in characters
   .elementFrequency //transform characters to a list [[count1,char1],[count2,char2],...]
   .flatten          //flatten to [count1,char1,count2,char2,...]
   .join;            //join the list to one string

series(i:int)->begin
  local s:=toString(i);
  s:=sort(copy(s,[0..length(s)-1],1)).join;
  local result:=[];
  while(not(s in result),begin
    result|=s;
    s:=step(s);
  end);
  result;
end;

//*See <a href="http://rosettacode.org/wiki/Self-referential_sequence">http://rosettacode.org/wiki/Self-referential_sequence</a>
main->print([1..10000].pEach(i,series(i),aggregator({size($x)<size($y) ? $y : $x})).join(', '));
