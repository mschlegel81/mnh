private ipAndPort:='localhost:43210';
private address:='http://'+ipAndPort;
private upSince:=systime;

serve(request:Map)->serve(request['request','path']);

serve('/index.html'):=//!~
<body>
<h3>serverTest @{$0}</h3>
<ul>
  <li><a href={$0}/ping>  ping  </a></li>
  <li><a href={$0}/time>  time  </a></li>
  <li><a href={$0}/uptime>upTime</a></li>
</ul>
</body>
~.format(address).wrapTextInHttp;

serve('/time'  )->wrapTextInHttp(formatTime('hh:nn.ss yyyy-mm-dd',systime),'text');
serve('/uptime')->wrapTextInHttp(formatTime('hh:nn.ss yyyy-mm-dd',upSince-systime),'text');
serve('/ping'  ):=wrapTextInHttp('Pong!','text');

memoized complainOnce(method,request,protocol)->begin
  warn("Unhandled request:",
       "\n  method  = ",method  ,
       "\n  request = ",request ,
       "\n  protocol= ",protocol);
  httpError;
end;

//*Fallback
serve(request,path,rawParameters)->complainOnce@$params;

@demo_for=httpServer
main->begin
  startHttpServer(ipAndPort,::serve,0);
  openUrl(address+'/index.html');
  ask('Press Enter to shutdown server');
end;

main('test')->begin
  startHttpServer(ipAndPort,::serve,0);
  print(httpGet(address&'/ping'));
end;
