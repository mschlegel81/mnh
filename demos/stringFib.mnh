private lengthLimit:=18;

//@demo_for=string arithmetics
plus(x:string,y:string)->begin
  local result:='';
  local maxLen:=max(length(x),length(y));
  local X:=repeat('0',maxLen-length(x))&x;
  local Y:=repeat('0',maxLen-length(y))&y;
  local carry:=0;
  while(length(X)>0,begin
    local sum:=toString(softCast(copy(X,length(X)-lengthLimit,lengthLimit))+
                        softCast(copy(Y,length(Y)-lengthLimit,lengthLimit))+
                        carry);
    sum:=repeat('0',lengthLimit-length(sum))&sum;
    X:=copy(X,0,length(X)-lengthLimit);
    Y:=copy(Y,0,length(Y)-lengthLimit);
    result:=copy(sum,length(sum)-lengthLimit,lengthLimit) & result;
    carry:=softCast("0"&(copy(sum,0,length(sum)-lengthLimit)));
    void;
  end);
  result:=replace('#'&carry&result,['#0','#'],['#','']);
  result='' ? "0" : result;
end;

memoized stringFib(i:int)->i<=1 ? "1" : stringFib(i-1).plus(stringFib(i-2));

//*Prints out the first 1000 Fibonacci-Numbers
main->printf("%s\t",[1..1000].each(i,stringFib(i)));
