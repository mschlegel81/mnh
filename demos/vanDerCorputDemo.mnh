BITS:=2^[4..0];
binary(i:Int)->ord((i and BITS)>0).join&'_2';

ternary(i:Int)->begin
  local r:=i.digits(3);
  while r.size<5 do r:=0|r;
  r.join&'_3';
end;

printTable(L:List)->L.map((row)->row.join("\t|\t")).join("\n").print;
printTable(iterable:IterableExpression)->iterable.head(100).printTable;

//*Demonstrates the behavior of Van-der-Corput numbers
main->begin
  local indexes:=[0..5,10..13,17..32,1234];
  ['Index' | indexes,
   'Van-der-Corput (10)' | vanDerCorputGenerator(10).head(indexes.max+1)[indexes].map({format('%6.4f',$0)})].transpose.printTable;
  print;
  print('Index        | Van-der-Corput (2)');
  print('   | binary  | dec.   | binary');
  print('---+---------+--------+-----------');
  zip([0..12],vanDerCorputGenerator(2))
  .map((x)->[x[0],x[0].binary,x[1],'0.'&round(32*x[1]).binary ])
  .printTable;

  print;
  print('Index        | Van-der-Corput (3)');
  print('   | ternary | decimal  | ternary');
  print('---+---------+----------+-----------');
  zip([0..12],vanDerCorputGenerator(3))
  .map((x)->[x[0],x[0].ternary,format('%0.8d',x[1]),'0.'&round(3^5*x[1]).ternary ])
  .printTable;
end;
