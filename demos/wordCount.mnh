USE inputs;

private filterNonempty(s)->s%(s<>'');
private analyze(lines:stringList)->begin
  local wordCount:=
  lines.lower
       .clean(['a'..'z'],' ') //retain only letters
       .split(' ')            //split at spaces
       .flatten               //list of list of strings -> list of strings
       .filterNonempty        //remove ''
       .elementFrequency      //List to element frequeny
       .sort({$x%0>=$y%0});   //sort by frequency

  print('Words total:    ',local total:=each(w,wordCount%%0,+));
  print('Distinct words: ',size(wordCount));
  local top50:=head(wordCount,50);
  print('Most frequent:');
  printf("%s\t%s\t%s",
    'word' |(top50%%1),
    'count'|(top50%%0),
    '%'    |round(top50%%0/total*100,2));

end;

private filesWords(pattern)->each(f,files(pattern),|,fileLines(f));

//*Displays a short info on words in kjv.txt
main->analyze(fileLines(inputs.kjv));
//*Displays a short info on words in the given file or files matching a search pattern
main(fileOrPattern:string)->analyze(filesWords(fileOrPattern));
