paramCount(F:expression)->size(unique(each(t,tokenSplit(string(F),"mnh"),|,copy(t,0,1)="$" ? t : [] )));

Y(F:expression)->Y(F,paramCount(F));
Y(F:expression,2)->{F($n,F)};
Y(F:expression,3)->{F($x,$y,F)};
Y(F:expression,4)->{F($x,$y,$z,F)};
fakForY:={$n<=1 ? 1 : $n*$f($n-1,$f)};
fibForY:={$n<=1 ? 1 :    $f($n-1,$f)+
                         $f($n-2,$f)};
//*Solves the <a href="http://rosettacode.org/wiki/Y_combinator">Y combinator task</a> from rosettacode.org
main->each(i,[0..20],print(i,' ',Y(fakForY)(i),' ',Y(fibForY)(i)));

main;
