{
[['packages/hash.mnh',"hex(i)->format('%16x',i).replace(' ','0').copy(8,8);\r\n\r\nfileHash(filename:string)->fileExists(filename) ? fileContents(filename).hash.hex : '--file does not exist--';\r\nmain->print(fileHash(myPath));\r\nmain(...)->printf(\"%X%\\t%X%\",$params,each(p,$params,fileHash(p)));\r\n"]
,['packages/statistics.mnh',"//*Returns the mean of all values in <code>X</code>\r\nmean    (X:numericList)->X.agg(+)/size(X);\r\n//*Returns the (statistical) variance of all values in <code>X</code>\r\nvariance(X:numericList)->mean(X^2)-mean(X)^2;\r\n\r\nmedian(X:numericList)->sort(X).get(size(X) div 2);\r\n\r\ndecils(L)->sort(L).get(round([0..10]/10*(size(L)-1)));\r\n\r\nprivate testEx(e:expression)->printf(\"%-29s = %s\",unbrace(toString(e)),toString(e()));\r\nmain->testEx({mean([1,2,3.2,-1.8])}) |\r\n      testEx({variance([1,2,3.2,-1.8])})|\r\n      testEx({median(random(100))}) |\r\n      testEx({decils(round(random(1000),3))});\r\n"]
].each(f,fileExists($0&f[0]) ? void : writeFile($0&f[0],f[1]))}
