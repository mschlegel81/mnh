charges:=each(y,[-10..10]*0.1,[-1,y,1],[1,y,-1]);

force(dx,dy)->$params/(dx*dx+dy*dy)^1.5;

fieldGradient(x,y)->begin
  local F:=each(c,charges,+,force(c%0-x,c%1-y)*c%2);
  F/sqrt(F%0*F%0+F%1*F%1);
end;

abortAtLocation(x,y,stepSize)->begin
  local result:=isNan(x) or isNan(y) or abs(x)>10 or abs(y)>10;
  result ? true : trueCount(each(c,charges%(charges%%2>0),sqr(c%0-x)+sqr(c%1-y)<sqr(stepSize)))>0;
end;

fieldLine(x0,y0)->begin
  local result:=[$params];
  local p:=$params;
  local stepSize:=0.01;
  local lastGradient:=[0,0];
  while(not(abortAtLocation(p%0,p%1,stepSize)),begin
    local currentGradient:=fieldGradient@p;
    stepSize:=0.01+0.02*sqr(1+currentGradient%0*lastGradient%0
                            +currentGradient%1*lastGradient%1);
    lastGradient:=currentGradient;
    p:=p+stepSize*currentGradient;
    result|=[p];
  end);
  result;
end;

//plot([]);
pi:=4*arctan(1);

renderSystem(f)->plot([]) and each(c,charges%(charges%%2<0),
  each(u,2*pi*([1..round(f*c%2)]+random)/round(f*c%2),
         addPlot(fieldLine(c%0+0.01*sin(u),c%1+0.01*cos(u)),"black l")));

main->renderSystem(7);
