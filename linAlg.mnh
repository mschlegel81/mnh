isSquareMatrix(M:list)->each(m,M,and,m:numericList and size(m)=size(M));
minor(M,i,j)->M%([0..size(M)-1]<>i)
              %%([0..size(M)-1]<>j);

det(M)->size(M)=1 ? head(flatten(M))
      : size(M)=2 ? M%0%0*M%1%1-M%1%0*M%0%1
      : each(i,[0..size(M)-1],+,(-1)^i*M%0%i*det(minor(M,0,i)));

inverse(M)->isSquareMatrix(M) ? each(i,[0..size(M)-1],each(j,[0..size(M)-1],(-1)^(i+j)*det(minor(M,j,i))))/det(M) : [];

mult(A,B)->each(i,[0..size(A  )-1],
           each(j,[0..size(B%0)-1],
           each(k,[0..size(A%0)-1],+,A%i%k*B%k%j)));

printMat(A)->print(each(a,A,&"\n"&,each(x,a,&"\t"&)));
