densityPlot(binaryFunc:expression,
            x0:numeric,x1>x0,
            y0:numeric,y1>y0,
            gridSize>0)->
  densityPlot(each(ix,[x0..floor((x1-x0)/gridSize)],|,
              each(iy,[y0..floor((y1-y0)/gridSize)],
                       [ix,iy,binaryFunc(x0+(ix+0.5)*gridSize,
                                         y0+(iy+0.5)*gridSize)])),
              x0,y0,gridSize);

private densityPlot(L:list,x0:numeric,y0:numeric,gridSize)->
  densityPlot(each(subList,
                    each(interval,
                         intervals(decils(L%%2)),
                         L%(L%%2>interval%0 and L%%2<=interval%1)%%[0,1]),
                     each(tuple,
                          subList,
                           tuple   *gridSize+[x0,y0],
                          (tuple+1)*gridSize+[x0,y0])));
private densityPlot(splittedList)->
     plot(splittedList%0,"GREY0   box") and
     each(i,[1..size(splittedList)-1],and,
             addPlot(splittedList%i,"GREY"&(i/(size(splittedList)-1))&" box"));

decils(L:numericList)->sort(L)%round([0..20]/20*(size(L)-1));
intervals(L:numericList)->each(i,[0..size(L)-2],[L%i+(i==0?-1:0),L%(i+1)]);

densityPlot({sin($x^2+$y^2)},-10,10,-10,10,0.1);
