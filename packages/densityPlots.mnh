densityPlot(binaryFunc:expression,
            x0:numeric,x1>x0,
            y0:numeric,y1>y0,
            gridSize>0)->densityPlot(binaryFunc,x0,x1,y0,y1,gridSize,20,{"GREY"&$x});

densityPlot(binaryFunc:expression,
            x0:numeric,x1>x0,
            y0:numeric,y1>y0,
            gridSize>0,
            levelCount>0,
            levelColorExpression:expression)->begin
  local halfSize:=gridSize*0.5;
  local points:=each(x,x0+[0..round((x1-x0)/gridSize)-1]*gridSize+halfSize,|,
                each(y,y0+[0..round((y1-y0)/gridSize)-1]*gridSize+halfSize,[x,y]));
  local values:=pEach(p,points,binaryFunc@p);
  local levels:=sort(values)%round([0..levelCount]/levelCount*(size(values)-1));
  levels:=each(i,[0..size(levels)-2],[levels%i+(i==0?-1:0),levels%(i+1)]);
  plot([]);
  each(i,[0..size(levels)-1],
    addPlot(each(p,points% isInRange(values,levels%i%0,levels%i%1),p-halfSize,p+halfSize),
            "box "&levelColorExpression(i/(size(levels)-1)))
  );
end;

//*For regression test
main->begin
  plot.setAxisStyle([0,0]);
  densityPlot({round($x^2-$y^2,3)},-10,10,-10,10,0.2,5,{"GREY"&$x});
  renderToFile(replace(myPath&"#",".mnh#",".png"),768,768,4);
end;
