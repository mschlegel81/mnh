private average(L:NumericList)->L.agg(+)/L.size;
fitParameters(x:NumericList,y:NumericList)->begin
  mask:=!(isInfinite(x) or isNan(x) or isInfinite(y) or isNan(y));
  mx:=(x_:=x[mask]).average;
  my:=(y_:=y[mask]).average;
  linearTerm:=average((x_-mx)*(y_-my))/average(sqr(x_-mx));
  [my-linearTerm*mx,linearTerm];
end;

to2D(Y:NumericList)->[[0..Y.size-1],Y];
to2D(XY:List)->XY.each(p,assert(p.isNumericList(2)),trailing) orElse [XY.getInner(0),XY.getInner(1)];
to2D(X:NumericList,Y:NumericList)->assert(X.size=Y.size) orElse [X,Y];

@SuppressUnusedWarning=all
linearFit(...)->begin
  p:=fitParameters@(to2D@(...));
  p[0]+((x)->x)*p[1];
end;

exponentialFit(...)->begin
  p:=fitParameters@ln(to2D@(...));
  exp(p[0])*((x)->x)^p[1];
end;
