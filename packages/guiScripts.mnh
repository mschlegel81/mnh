//@SuppressUnusedWarning
//@insertScript=Pick file or directory
pickFile(s:string)->ask('Pick file or directory').escape;

//@SuppressUnusedWarning
//@editScript=Trim trailing spaces
trimTrailingSpaces(s:stringList)->s.trimRight;

//@SuppressUnusedWarning
//@editScript=Remove double blank lines
removeDoubleBlanks(s:stringList)->s.join("\n").replace("\n\n\n","\n\n").split("\n");

//@SuppressUnusedWarning
//@editScript=Sort lines and remove duplicates
sortLines(s:stringList)->s.unique.sort;

unifiedDiff(aName:string,bName:string,aLines:stringList,bLines:stringList,additionalLines>=0)->begin
  local edit:=diff(aLines,bLines,true)['edit'].each(e,e[0]='+' ? [e[0],e[1]+1,e[2]+1,bLines[e[2]]]
                                                               : [e[0],e[1]+1,e[2]+1,aLines[e[1]]]);

  local runs:=edit.each(e,e[0]<>' ' ? [index-additionalLines..index+additionalLines] : void,|).orElse([]).unique.each(i,i>=edit.size or i<0 ? void : i);
  runs:=runs.each(i,index=0           OR runs[index-1]<i-1 ? i :
                    index=runs.size-1 OR runs[index+1]>i+1 ? i : void);
  runs:=runs.each(i,(index and 1)=0 ? [i,runs[index+1]]:void);
  ['--- '&aName,'+++ '&bName]|
  runs.each(run,
      join(['@@ -',edit[run[0],1],',',edit[run[1],1]-edit[run[0],1]+1,
              ' +',edit[run[0],2],',',edit[run[1],2]-edit[run[0],2]+1,' @@']),
      edit[[run[0]..run[1]]].each(e,(e[0]='.' ? '  ' : e[0]&' ')&e[3]),|);

end;

//@utility=diff (new editor)
//@newEdit
//@language=diff
editDiff(editorFile:string)->begin
  local compareWith:=ask("Pick tab to compare with",editors.each(e,e=editorFile ? void : e));
  unifiedDiff(compareWith,editorFile,editorContent(compareWith),editorContent(editorFile),2);
end;

//@SuppressUnusedWarning
//@utility=diff
editDiffPrint(editorFile:string)->printf("%s",editDiff(editorFile));

//@SuppressUnusedWarning
//@utility=find in all open files
findInAll(editorFile:string)->begin
  local searchRegex:=ask('Please enter regex for search.');
  searchRegex<>''
  ? editors.each(editor,editor.editorContent.each(line,line.matches(searchRegex) ? print('@',editor,':',index+1,',',1) : void))
  : print('No regex given - search cancelled');
  void;
end;

//@SuppressUnusedWarning
//@utility=open all imported files
openImported(editorFile:string)->inspect(editorFile,editorFile.editorContent)['uses'].getInner(1).each(file,openInEditor(file));


//@SuppressUnusedWarning
//@utility=Compare folders (new editor)
//@newEdit
//@language=diff
compareFolders(editorFile:string)->begin
  local folder1:=ask('Please enter folder 1').expandedFileName;
  local filesIn1:=folder1.allFiles.replaceOne(folder1,'');
  local folder2:=ask('Please enter folder 2').expandedFileName;
  local filesIn2:=folder2.allFiles.replaceOne(folder2,'');
  local toCompare:=filesIn1.intersect(filesIn2)
                  .each(file,fileContents(folder1&file)==fileContents(folder2&file) ? void : file)
                  .union(filesIn1.minus(filesIn2),
                         filesIn2.minus(filesIn1));
  toCompare.each(file,unifiedDiff(folder1&file,folder2&file,fileLines(folder1&file),fileLines(folder2&file),2),' ',|);
end;
