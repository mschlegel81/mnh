iterate(x0,function:Expression(1),stepCount>=1)->iterate(x0,function,stepCount,true);
iterate(x0,function:Expression(1),stepCount>=1,lastOnly=true )->iterate(x0,function,stepCount,false).trailing;
iterate(x0,function:Expression(1),stepCount>=1,lastOnly=false)->begin
  local x:=x0;
  [1..stepCount].each(step,x:=function(x));
end;

@SuppressUnusedWarning=all
sum(L:NumericList)->L.agg(+) orElse 0;
prod(L:NumericList)->L.agg(*) orElse 1;

runningSum(L:NumericList)->begin
  (local s:=0)|(L.each(x,s+=x));
end;

factorial(i=0)->1;
factorial(i>=21)->2.43290200817664E18*(1.0*[21..i]).agg(*);
factorial(i in [1..20])->[1..i].agg(*);

binomCoeff(n>0,0)->1;
binomCoeff(n>0,n)->1;
binomCoeff(n>0,k<n)->k<=0 ? 1 : [1..min(k,n-k)].each(i,(n-k+i)/i,*).round;

//*An approximation to the Gamma function
Gamma(x>50.0)->exp(0.5*ln(2*pi)+(x-0.5)*(ln(x-0.5)-1)-1/(24*(x-1/2)));
Gamma(x>0.0)->Gamma(x+1)/x;
Gamma(x:Int)->Gamma(x.toReal);
Gamma(X:NumericList)->X.pMap(::Gamma);
