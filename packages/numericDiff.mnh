USE polynomials, basic;

private bin(n<=0)->[1];
private bin(n>0)->((bin(n-1))|0+0|(-bin(n-1)));
//*Returns the n-th numeric differential of f determined with step size of h
D(f:expression,n:int,h>0  )->each(i,[0..n],+,f({$x}+(n/2-i)*h)*bin(n)%i/h^n);
//*Returns the n-th numeric differential of f determined with step size of h; evaluated at x
D(f:expression,n:int,h>0,x)->each(i,[0..n],+,f(  x +(n/2-i)*h)*bin(n)%i/h^n);
//*Returns the Taylor Series expansion of f around x0 with nMax summands
TaylorSeries  (f:expression,nMax>=0,x0:numeric,h:numeric)->polyExpression(-x0,each(n,[0..nMax],D(f,n,h,x0)/fak(n)));
//*Returns the McLaurin Series expansion of f around x0 with nMax summands
McLaurinSeries(f:expression,nMax>=0,           h:numeric)->polyExpression(    each(n,[0..nMax],D(f,n,h, 0)/fak(n)));

