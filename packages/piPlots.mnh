sum([])->0;
sum(L)->each(e,L,+);

pascal(n)->pascal([1],n);
pascal(L,n>0)->pascal(0.5*(0|L+L|0),n-1);
pascal(L,n)->each(i,[max(1,size(L)-1)..1],sum(head(L,i)));

atSummand(i)->(-1)^i/(2*i+1);
pi:=4*arctan(1);
piA(n:int)->4*sum(          atSummand([0..n-1]));
piB(n:int)->4*sum(pascal(n)*atSummand([0..n-1]));
piA(N:intList)->each(n,N,piA(n));
piB(N:intList)->each(n,N,piB(n));

piATime(n)->abs(time({piA(n)})%[2,1]%%1-[0,pi]);
piBTime(n)->abs(time({piB(n)})%[2,1]%%1-[0,pi]);

dataFileName:=replace(myPath&"#",".mnh#",".data");
L:=fileExists(dataFileName)
   ? expression(fileContents(dataFileName))()
   : [each(i,[1..100]*10,   piATime (i) ),
      each(i,[1.. 60]   ,   piBTime (i) )];

print(fileExists(dataFileName)          ? "Data was read." :
      writeFile(dataFileName,string(L)) ? "Data was computed and written." :
                                          "Data was computed; writing failed!");

doPlot->setPlotLogscale([false,true]) and
        setPlotAutoscale([true,true]) and
        plot   (L%0,"l +") and
        addPlot(L%1,"l x");

doPlot;
//piBTime(60);

