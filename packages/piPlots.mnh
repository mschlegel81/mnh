//Binominalkoeffizient Ã¼ber Pascalsches Dreieck:
pure pascal(n)->pascal([1],n);
pascal(L,n>0)->pascal(L|0+0|L,n-1);
pascal(L,n)->L;

//Summe und gleitende Summen:
sum([])->0;
sum(L)->each(e,L,+);
fsum(L)->each(i,[1..size(L)],sum(head(L,i)));
rsum(L)->each(i,[size(L)..1],sum(head(L,i)));

weights(n)->rsum(pascal(n))/(2^n);
arcTanSummand(i)->(-1)^i/(2*i+1);

private summands(n)->arcTanSummand([0..n]);
private maxN:=60;

sum1(i)->sum(summands(i));
sum2(i)->sum(summands(i)*weights(i));
private errors1->each(i,[1..maxN],abs(sum1(i)-arctan(1)));
private errors2->each(i,[1..maxN],abs(sum2(i)-arctan(1)));
T (i)->abs(time({sum1(i)})%[2,1]%%1-[0,arctan(1)])*[60000,1];
T2(i)->abs(time({sum2(i)})%[2,1]%%1-[0,arctan(1)])*[60000,1];

doPlot->setPlotLogscale([true,true]) and
        setPlotAutoscale([true,true]) and
        setPlotPreserveAspect(false) and
        print('Row #1: series A, error vs. summand count') and
        plot([1..maxN],errors1,"black l .") and
        print('Row #2: series B, error vs. summand count') and
        addPlot([1..maxN],errors2,"red l .") and
        print('Row #3: series A, error vs. time') and
        addPlot(each(i,[1..maxN],T(i)),"black x +") and
        print('Row #4: series B, error vs. time') and
        addPlot(each(i,[1..maxN],T2(i)),"red x +");

main->doPlot and renderToFile(replace(myPath&"#",".mnh#",".png"),768,768,4);

