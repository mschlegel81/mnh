shorten(s:string)->begin
  local result:=shorten(s,2);
  local tryOn:=true;
  each(subLen,[3..32],tryOn ? begin
    local newResult:=shorten(s,subLen);
    length(newResult)<length(result) 
    ? result:=newResult
    : tryOn:=false;
    void;
  end : void);
  
  print ('Input length  : ',length(escape(s)));
  print ('Result length : ',length(result));
  printf('Ratio         :%##0.00%%%',length(result)/length(escape(s))*100);
  print (result);
  result;
end;

private benefit2(source:string,replaceWhat)->length(source)-length(replace(source,replaceWhat,'~'))-length(replaceWhat)-1;

shorten(s:string,subLength)->begin
  local alphabetOut:=[];
  local workString:=s;
  local replacements:=[];
  local proceed:=true;
  local result:='';
  each(run,[0..9],begin
    local alphabet:=unique(copy(workString,[0..length(workString)-1],1));
    alphabet:=each(c,[' '..'[',']'..'~'],c in alphabet ? void : c);
    each(alphabetChar,alphabet,proceed ? begin
      local subStrings:=unique(copy(workString,[0..length(workString)-subLength],subLength));
      local benefits:=pEach(sub,subStrings,benefit2(workString,sub));
      local bestIdx:=argMax(benefits);
      replacements:=subStrings%bestIdx|replacements;
      alphabetOut:=alphabetChar|alphabetOut;
      workString:=replace(workString,subStrings%bestIdx,alphabetChar);
      local oldLen:=length(result)=0 ? 2^62 : length(result);
      result:='replace('&escape(workString)&','&
              'copy('&escape(each(c,alphabetOut ,&))&',[0..'&(size(alphabetOut )-1)&']*1,1),'&
              'copy('&escape(each(r,replacements,&))&',[0..'&(size(replacements)-1)&']*'&subLength&','&subLength&'));';
      length(result)>=oldLen ? proceed:=false : void;
      void;
    end : void);
  end);
  result;
end;

//*For regression test
main->main(myPath);
main(filename)->shorten(fileContents(filename));
