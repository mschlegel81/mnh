USE primes;

memoized
G(maxP)->sievePrimes([2],floor(sqrt(maxP)),2*[1..floor(maxP/2)]+1);
sievePrimes(primes,maxCheck,candidates                   )->sievePrimes(primes,maxCheck,head(candidates),tail(candidates));
sievePrimes(primes,maxCheck,nextPrime>maxCheck,candidates)->            primes|nextPrime|candidates;
sievePrimes(primes,maxCheck,nextPrime         ,candidates)->sievePrimes(primes|nextPrime,maxCheck,candidates%(candidates mod nextPrime<>0));

memoized
H(maxP<=2)->[2];
H(maxP)->resieve(H(floor(sqrt(maxP))),[floor(sqrt(maxP))+1..maxP]);
resieve(primes,candidates)->primes|(candidates%pEach(p,primes,and,candidates mod p = 0));

each(i,(2^[16..1])|(2^[2..16]-1)|(2^[16..1]+1),
  print('[',i,',',time({G(i)})%"time",',',time({H(i)})%"time",',',time({primes(i)})%"time",'],'));


//F([2,3,5,7,11])==primes(11^2);
//G(11^2)==primes(11^2);

//time({F([2,3,5,7,11])})%"time";
//time({G(11^2)})%"time";
