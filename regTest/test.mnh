test_list:=['demos\\99bottles.mnh',
            'demos\\ackermann.mnh',
            'demos\\anagram.mnh',
            'demos\\digitSquareSum.mnh',
            'demos\\fibonacci.mnh',
            'demos\\fibonacciWord.mnh',
            'demos\\hailstone.mnh',
            'demos\\hofstadterConway.mnh',
            'demos\\huffmann.mnh',
            'demos\\josephus.mnh',
            'demos\\quine.mnh',
            'demos\\quine2.mnh',
            'demos\\rk4.mnh',
            'demos\\root.mnh',
            'demos\\setConsolidation.mnh',
            'demos\\shannonEntropy.mnh',
            'demos\\sierpinski.mnh',
            'demos\\ulam.mnh',
            'demos\\vampire.mnh',
            'demos\\wordCount.mnh',
            'demos\\y.mnh',
            'demos\\12_statements.mnh',
            'demos\\dice7fromDice5.mnh',
            'demos\\monteCarloPi.mnh',
            'demos\\root.mnh',
            'demos\\weasel.mnh'];
            
FMT_STRING:="%X" & max(length(test_list)) & "% %hh:nn:ss.zz% ";

testDirectory:=replace(splitFileName(myPath)%"relative",
                       splitFileName(myPath)%"filename","");

expectedResultName  (scriptname)->testDirectory&replace(splitFileName(scriptname)%"filename"&"#",".mnh#",".expected");
lastResultName      (scriptname)->testDirectory&replace(splitFileName(scriptname)%"filename"&"#",".mnh#",".last");
expectedResultExists(scriptname)->fileExists(expectedResultName(scriptname));
expectedResult      (scriptname)->fileLines (expectedResultName(scriptname));

storeResult(filename,data)-> writeFileLines(filename,data) ? filename : void;

runScript(executor,scriptName)->print(checkResult(scriptName,systime,exec(executor,["-det",scriptName]),systime));
checkResult(scriptName,t0,result,t1)->format(FMT_STRING,scriptName,t1-t0)& (
  expectedResultExists(scriptName) ? (expectedResult(scriptName)==result ? "o.k."
                                                                         :  "Results differ! Please check "&storeResult(lastResultName(scriptName),result))
                                   : "No reference result found. Storing "&storeResult(expectedResultName(scriptName),result));

reportStart(executor)->print('-----------------------------------------------------\n',
                             'Starting test runs with executable '&executor,
                             '\n-----------------------------------------------------');

main(executor       )->reportStart(executor) and each(test,test_list,                      runScript(executor,test)       );
main(executor,filter)->reportStart(executor) and each(test,test_list,pos(filter,test)>=0 ? runScript(executor,test) : void);
main->main("mnh_console.exe");
