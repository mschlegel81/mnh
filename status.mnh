USE testLog,make;

currentHash:='core/code_hash.inc'.fileContents.clean(['0'..'9','A'..'F'],' ').trim;

main('history')->begin
  local history:=testHistory;
  local codeHashes:=history.getInner(0).unique;
  local flavours  :=history.getInner(1).unique;
  codeHashes.each(codeHash,
    print("\nPrevious code hash: ",codeHash) orElse
    ("Flavour\tTime\tTest result\n"&(
    flavours.each(flavour,
      history[codeHash=history.getInner(0) and flavour=history.getInner(1)].each(entry,
        flavour&"\t"&entry[2]&"\t"&(entry[3] ? 'o.k.' : 'failed')
      ).join("\n")
    ).{$x[$x<>'']}.join("\n"))).print
  );
  print;
  main;
end;

main->print('Current code hash: '&currentHash&"\nTime: "&formatTime('c',systime)&
"\n                     Binary | Exists | Version | Tested\n"&
"----------------------------+--------+---------+---------\n"&
([0..7].pEach(i,begin
  local bin:=binName(i);
  local ex:=bin.fileExists;
  local hashOk:=(bin.exec(['-codeHash']).head.split(':')[1])==currentHash;
  local tested:=ex AND timeForTest(bin);
  format('%27s | %6s | %7s | %6s',bin,ex ? 'yes' : 'no',ex ? (hashOk ? 'o.k.' : 'N O K') : 'n/a' ,ex ? (tested orElse '---') : 'n/a' ).join("\t");
end).join("\n")));

